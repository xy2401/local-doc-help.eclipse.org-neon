<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Style-Type" content="text/css">
<link rel="STYLESHEET" href="../../styles/carnot.css"
    charset="ISO-8859-1" type="text/css"
>
<title>Runtime Environment</title>
<script language="JavaScript" src="../../styles/naviLine.js"
    type="text/javascript"
></script>
</head>
<body>
<script language="JavaScript" type="text/javascript">
<!--
	writeNavigation("Multiple Versions",
	 "","multiversion.html",
     "../key-concepts.html","Concepts",
     "ag-concepts-preface.htm","Administrative Concepts");
 -->
</script>
<h1>Runtime Environment</h1>
<p>The Stardust runtime environment is composed of:</p>
<ul>
    <li>the Stardust Engine,</li>
    <li>the audit trail database and</li>
    <li>one business process model with all its deployed versions.</li>
</ul>
<p>The Stardust Engine can run either in a managed
environment or in a non-managed environment. In the non-managed
environment, the Process Engine communicates directly with the audit
trail database via JDBC connections.</p>
<p>In the managed environment, which is represented by an
application server, the Process Engine uses a data source provided by
the managed environment to communicate with the audit trail database.
The creation and configuration of the data source is performed
completely by the application server.</p>
<p>From the client point of view, Stardust runtime engine can
operate in the same JVM as the client, which is named <tt>Spring
local mode</tt>, or in a separate JVM accessed remotely, which is named <tt>remote
or EJB mode</tt>. For the latter, the Stardust Engine must be
deployed to an EJB container.</p>
<h2>Operating in Remote Mode</h2>
<p>The clients can access the Stardust Engine remotely. For
that the process engine must be deployed as an enterprise application to
an application server. Stardust delivers a set of Enterprise Java Beans,
located in <tt>carnot.ear</tt>, which must be deployed to an EJB server
or to a set of clustered EJB servers. If the deployment is done in a
clustered environment, the administrator must ensure that the environment
remains consistent (i.e. all EJB servers in this runtime environment
must be configured to access the same audit trail database).</p>
<p>Supported EJB servers comprise all supported
J2EE and Java EE compliant application servers. Instructions on
how to deploy the Stardust Engine to the runtime environment has
been provided in section <a
    href="PLUGINS_ROOT/org.eclipse.stardust.docs.deployment/html/deploymentconcepts/ag-deployment-2.htm"
> Deploying Stardust Components to an EJB Application Server</a> of the <a
    href="PLUGINS_ROOT/org.eclipse.stardust.docs.deployment/html/toc.html"
> Deployment Guide</a>. In the <a
    href="PLUGINS_ROOT/org.eclipse.stardust.docs.deployment/html/applicationserversetup/toc.html"
> Application Server Setup</a> chapter of this guide you can find a set of
server vendor specific deployments for a variety of servers Stardust has
been tested with.</p>
<p class="image"><img src="images/ag-concepts-1.png" alt=""> <br>
<strong>Figure:</strong> Overview of the Stardust Runtime Environment</p>
<h2>Audit Trail Database</h2>
<p>The audit trail database stores all the versions of the deployed
model and all historical records of the progress of process instances
from start to completion or termination. Such information includes e.g.
date, time and performer of activity instances belonging to the process.</p>
<p>The database is accessed via JDBC data sources that must support
XA transactions, which are supported since JDBC 2.0. Stardust components
may either obtain a pre-configured data source from the application
server, or create a data source based on the parameters stored in a
properties file or deployment descriptors. <span class="Stil1">Stardust
recommends the data source to be provided by the application server
whenever possible</span>. A detailed description on how to configure a database
to use it as your audit trail database can be found in the chapter <a
    href="PLUGINS_ROOT/org.eclipse.stardust.docs.deployment/html/audittraildatabasesetup/setup-audittrail.html"
> Setting up the Audit Trail Database</a> of the <a
    href="PLUGINS_ROOT/org.eclipse.stardust.docs.deployment/html/toc.html"
> Deployment Guide</a>.</p>
<p>The audit trail database can be cleaned up if necessary. However,
this action should be reserved to administrative scenarios where the
entire system must be reset by deleting all data in the audit trail, for
example before deployment of a different model. Refer to chapter
<a href="PLUGINS_ROOT/org.eclipse.stardust.docs.enduser/html/handbooks/execution-clients/admin-portal/admin-portal-audittrail.html">
Cleaning up the Audit Trail Database</a> in the
<a href="PLUGINS_ROOT/org.eclipse.stardust.docs.enduser/html/handbooks/execution-clients/carnot-clients.html">
Stardust Portal</a> documentation for detailed
information.</p>

<h3>One Audit Trail Database - Multiple Model Deployment</h3>

<p>Stardust supports deployment of more than one model
in one and the same audit trail database. This is specifically supported in case of referencing model 
and referenced model. You should deploy the referenced model first and then the referencing model for 
the expected results.</p>

<script language="JavaScript" type="text/javascript">
<!-- 
writeFooter(); 
-->
</script>
</body>
</html>
